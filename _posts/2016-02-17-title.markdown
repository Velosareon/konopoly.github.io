---
layout: post
title: given an array of integers return the highest possible product from three of the integers
date: 2016-02-17 15:04:00
description: code practice problem
---
Write a function that takes an integer array as input and returns the highest possible product
that you can get from three of the integers.

Example:
{% highlight java %}
[1, 2, 3, 4] //given array
4*3*2 //performed calculations
24 //returned integer
{% endhighlight %}

Brute Force Code Overview:
The easy solution would be to use a sorting algorithm(bubble sort) to sort the array. Then
take the three last array integers and multiple them together. This solution is not preferred
because the time complexity is bad(O(n^2)).

{% highlight java %}
public static int highestProduct(int[] arr)
{
  //bubble sort given array
  int temp;
  for(int i=0; i < arr.length-1; i++)
  {
    for(int j=1; j < arr.length-i; j++)
    {
      if(arr[j-1] > arr[j])
      {
        temp = arr[j-1];
        arr[j-1] = arr[j];
        arr[j] = temp;
      }
    }
  }
  int product;
  product = arr[(arr.length-1)] * arr[(arr.length-2)] * arr[(arr.length-3)];
  return product;
}
{% endhighlight %}

Final Solution Code Overview:
Without sorting the array, this method only require one iteration through the array. Use three
placeholders for the three largest values in the array. In the for loop if the current integer of the array is larger than temp1 assign it to temp1 and assign the previous temp1 to temp2 and the previous temp2 to temp3. This way temp1, temp2, and temp3 will have the three largest values of array in order.

{% highlight java %}
public static int highestProduct(int[] arr)
{
  int temp1 = 0; //largest value in array
  int temp2 = 0; //second largest value in array
  int temp3 = 0; //third largest value in array
  //iterate through the array
  for(int i=0; i<arr.length; i++)
  {
    if(arr[i] > temp1)
    {
      temp3 = temp2;
      temp2 = temp1;
      temp1 = arr[i];
    }
    else if(arr[i] > temp2)
    {
      temp2 = arr[i];
    }
    else if(arr[i] > temp3)
    {
      temp3 = arr[i];
    }
  }
  return temp1*temp2*temp3;
}
{% endhighlight %}
